<?xml version="1.0" encoding="UTF-8"?><sqlb_project><db path="C:/Users/basti/Desktop/L2/INF403/projet/projet.db" readonly="0" foreign_keys="1" case_sensitive_like="0" temp_store="0" wal_autocheckpoint="1000" synchronous="2"/><attached/><window><main_tabs open="structure browser pragmas query" current="3"/></window><tab_structure><column_width id="0" width="300"/><column_width id="1" width="0"/><column_width id="2" width="125"/><column_width id="3" width="3038"/><column_width id="4" width="0"/><expanded_item id="0" parent="1"/><expanded_item id="1" parent="1"/><expanded_item id="2" parent="1"/><expanded_item id="3" parent="1"/></tab_structure><tab_browse><current_table name="4,7:mainClients"/><default_encoding codec=""/><browse_table_settings><table schema="main" name="Clients" show_row_id="0" encoding="" plot_x_axis="" unlock_view_pk="_rowid_"><sort/><column_widths><column index="1" value="52"/><column index="2" value="76"/><column index="3" value="143"/><column index="4" value="76"/><column index="5" value="167"/></column_widths><filter_values/><conditional_formats/><row_id_formats/><display_formats/><hidden_columns/><plot_y_axes/><global_filter/></table></browse_table_settings></tab_browse><tab_sql><sql name="TP7bis_Voile_SQL-DDL_a_completer.sql">DROP TABLE IF EXISTS Proprietaires;
DROP TABLE IF EXISTS Bateaux;
DROP TABLE IF EXISTS Emplacements;
DROP TABLE IF EXISTS Modeles;
DROP TABLE IF EXISTS TypesEmplacements;
DROP TABLE IF EXISTS Adherents;


PRAGMA FOREIGN_KEYS=ON;


--Types SQLite (TEXT = VARCHAR; REAL &amp; INTEGER = NUMBER)
CREATE TABLE Modeles (
   nom_modele TEXT,
   longueur_modele REAL,
   CONSTRAINT pk_modeles_k0 PRIMARY key (nom_modele)
   
);

CREATE TABLE TypesEmplacements (
   type_emplacement TEXT,
   longueur_max_type_emplacement INTEGER,
   prix_type_emplacement REAL,
   CONSTRAINT pk_typesEmplacements_k0 PRIMARY KEY (type_emplacement),
   CONSTRAINT ch_typesEmplacements_c0 CHECK ((type_emplacement='petit' AND longueur_max_type_emplacement &lt;= 7 AND longueur_max_type_emplacement &gt;=0) 
										OR (type_emplacement='moyen' AND longueur_max_type_emplacement &lt;= 12 AND longueur_max_type_emplacement &gt;=0)
										OR (type_emplacement='grand' AND longueur_max_type_emplacement &lt;=20 AND longueur_max_type_emplacement &gt;=0))
   
   
);

CREATE TABLE Emplacements (
   numero_emplacement INTEGER,
   type_emplacement TEXT,
   CONSTRAINT pk_emplacements_k0 PRIMARY KEY (numero_emplacement),
   CONSTRAINT fk_emplacements_f0 FOREIGN KEY (type_emplacement) REFERENCES TypesEmplacements(type_emplacement)
);

CREATE TABLE Bateaux (
   numero_bateau INTEGER, 
   date_construction_bateau DATE,
   nom_modele TEXT,
   numero_emplacement INTEGER,
   CONSTRAINT pk_bateaux_k0 PRIMARY KEY (numero_bateau),
   CONSTRAINT uk_bateaux_u0 UNIQUE (numero_emplacement),
   CONSTRAINT fk_bateaux_f0 FOREIGN KEY (nom_modele) REFERENCES Modeles(nom_modele),
   CONSTRAINT fk_bateaux_f1 FOREIGN KEY (numero_emplacement) REFERENCES Emplacements(numero_emplacement)
   
);

CREATE TABLE Adherents (
   numero_adherent INTEGER,
   nom_adherent TEXT,
   prenom_adherent TEXT,
   date_naissance_adherent DATE,
   CONSTRAINT pk_adherents_k0 PRIMARY KEY (numero_adherent)
   
);

CREATE TABLE Proprietaires (
   numero_adherent INTEGER,
   numero_bateau INTEGER,
   CONSTRAINT pk_proprietaires_k0 PRIMARY KEY (numero_adherent,numero_bateau),
   CONSTRAINT fk_proprietaires_f0 FOREIGN KEY (numero_adherent) REFERENCES Adherents(numero_adherent),
   CONSTRAINT fk_proprieteires_f1 FOREIGN KEY (numero_bateau) REFERENCES Bateaux(numero_bateau)
);



</sql><sql name="Parfumerie">DROP TABLE IF EXISTS Clients;
DROP TABLE IF EXISTS Magasins;
DROP TABLE IF EXISTS Parfums;
DROP TABLE IF EXISTS Marques;
DROP TABLE IF EXISTS Promotions;
DROP TABLE IF EXISTS Stocks;
DROP TABLE IF EXISTS Frequentes;
DROP TABLE IF EXISTS Validites;

PRAGMA FOREIGN_KEY=ON;

CREATE TABLE Clients (
	nomC TEXT,
	prenomC TEXT,
	date_naissance DATE,
	adresse TEXT,
	nom_parfum_pref TEXT,
	CONSTRAINT pk_clients_k0 PRIMARY KEY (nomC,prenomC)
);

CREATE TABLE Magasins (
	nomMag TEXT,
	adresse TEXT,
	CONSTRAINT pk_magasins_k0 PRIMARY KEY (nomMag)
);

CREATE TABLE Parfums (
	nomP TEXT,
	marque TEXT,
	volume_ml INTEGER,
	prix INTEGER,
	CONSTRAINT pk_parfums_k0 PRIMARY KEY (nomP),
	CONSTRAINT fk_parfums_f0 FOREIGN KEY (nomP) REFERENCES Marques(nomMar)
);

CREATE TABLE Marques (
	nomMar TEXT,
	adresse TEXT,
	numero_tel TEXT,
	delai_livraison INTEGER,
	CONSTRAINT pk_marques_k0 PRIMARY KEY (nomMar)
);

CREATE TABLE Promotions (
	code INTEGER,
	nom_parfum TEXT,
	fin_validite DATE,
	CONSTRAINT pk_promotions_k0 PRIMARY KEY (code)
);

CREATE TABLE Stocks (
	nomMag TEXT,
	nom_parfum TEXT,
	quantite INTEGER,
	CONSTRAINT pk_stocks_k0 PRIMARY KEY (nom_parfum),
	CONSTRAINT fk_stocks_f0 FOREIGN KEY (nomMag) REFERENCES Magasins(nomMag),
	CONSTRAINT fk_stocks_f1 FOREIGN KEY (nom_parfum) REFERENCES Parfums(nomP)
);

CREATE TABLE Frequentes (
	nom_magasin TEXT,
	nom_client TEXT,
	prenom_client TEXT,
	der_freq DATE,
	freq_achat INTEGER,
	CONSTRAINT pk_frequentes_k0 PRIMARY KEY (nom_magasin,nom_client,prenom_client),
	CONSTRAINT fk_frequentes_f0 FOREIGN KEY (nom_magasin) REFERENCES Magasins(nomMag),
	CONSTRAINT fk_frequentes_f1 FOREIGN KEY (nom_client) REFERENCES Clients(nomC)
);

CREATE TABLE Validites (
	pourcentage INTEGER,
	volume_ml INTEGER
);
	</sql><current_tab id="1"/></tab_sql></sqlb_project>
